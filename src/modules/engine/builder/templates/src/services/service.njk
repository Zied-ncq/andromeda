import  {AndromedaLogger} from "../config/andromeda-logger.js";
const Logger = new AndromedaLogger();
import {ProcessInstanceContext} from "./{{ ProcessDef.toLowerCase() }}.process-instance-context.js";

class {{ServiceClassName}} {

    processInstanceId
    // _context = new {{ ProcessDef }}ProcessInstanceContext();

    bootstrap(){
    }

    constructor(processInstanceId)
    {
        if (processInstanceId) {
            // in case we resume a process instance after a container restart
            this.processInstanceId = processInstanceId;
            // this.flowService = new TestFlowService(this.id);
        } else {
            this.processInstanceId = crypto.randomUUID();
            // this.flowService = new TestFlowService(this.id);
        }

    }

    static createInstance(processInstanceId)
    {
        const instance = new BasicScenarioProcessInstanceService(processInstanceId)
        // ContainerService.getInstance().lock(instance)

        return instance;

    }

    close(){

    }
}

export default {{ServiceClassName}}