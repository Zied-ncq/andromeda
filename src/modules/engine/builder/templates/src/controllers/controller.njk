import  {AndromedaLogger} from "../config/andromeda-logger.js";
const Logger = new AndromedaLogger();

class {{ ControllerClassName }} {

{% for startMethod in startMethods %}
    static start{{startMethod.name}} = async (req, reply) => {

        try {
            let variables = {};
            if(req.body && req.body.variables){
                variables = JSON.parse(req.body.variables);
            }

            if(req.files){
                Object.keys(req.files).forEach( (file:any) => {
                Logger.debug(`storing file ${file} in persistent storage`);
                });
            }
            const processInstance = await {{ startMethod.prefix }}ProcessInstanceService.createInstance();
            processInstance.start(variables);
            res.json({id: processInstance.id})

        } catch (err) {
            const returnError = new Error();
            returnError.statusCode = 500;
            returnError.message = err;
            returnError.stack=err;
            throw returnError;
        }
    }
{% endfor %}

}

export default {{ ControllerClassName }};